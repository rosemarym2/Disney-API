{"version":3,"sources":["App.js","index.js"],"names":["App","useState","disney","setDisney","error","message","setError","handler","a","fetch","response","console","log","status","Error","json","data","useEffect","map","item","index","name","films","tvShows","src","imageUrl","alt","to","sourceUrl","onClick","ReactDOM","render","document","getElementById"],"mappings":"0PA6DeA,EAvDH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBACtB,CACEG,OAAO,EACPC,QAAS,KAHf,mBAAOD,EAAP,KAAcE,EAAd,KAMMC,EAAO,uCAAG,8BAAAC,EAAA,+EAEWC,MAAM,wCAFjB,UAENC,EAFM,OAGZC,QAAQC,IAAIF,GACW,MAApBA,EAASG,OAJA,sBAKJ,IAAIC,MAAM,gCALN,uBAOOJ,EAASK,OAPhB,OAONC,EAPM,OAQZb,EAAUa,EAAKA,MARH,kDAUZV,EAAS,CAAEF,OAAO,EAAMC,QAAS,KAAEA,UAVvB,0DAAH,qDAgBb,OAHAY,qBAAW,WACXV,MACE,IACGL,EAGFE,EAAMA,MACA,6BAAKA,EAAMC,UAGlB,gCACE,mDACCH,EAAOgB,KAAI,SAACC,EAAMC,GACjB,OACA,gCACA,6CAAgBD,EAAKE,QACrB,yCAAYF,EAAKG,SACjB,4CAAeH,EAAKI,WACpB,qBAAKC,IAAML,EAAKM,SAAUC,IAAOP,EAAKE,OACtC,cAAC,IAAD,UACA,gCACA,gDACA,cAAC,IAAD,CAAMM,GAAI,IAAV,SAAeR,EAAKS,mBARVR,MAcZ,wBAAQS,QAAStB,EAAjB,+CAxBK,4CC1BXuB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.92e83af2.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport './App.css';\n\n\n\nconst App = () => {\n  const [disney, setDisney] = useState(\"\")\n  const [error, setError] = useState(\n      { \n        error: false, \n        message: \"\"\n      }\n    )\n  const handler = async () => {\n    try{\n      const response = await fetch(\"https://api.disneyapi.dev/characters\")\n      console.log(response)\n      if(response.status !== 200){\n        throw new Error(\"the error is...its messed up\")\n      }\n      const data = await response.json()\n      setDisney(data.data)\n    }catch(e){\n      setError({ error: true, message: e.message})\n    }\n  }\n  useEffect (()=>{\n  handler()\n  },[]);\n  if (!disney){\n    return <p>loading...</p>\n  }\n  if(error.error){\n    return <h1>{error.message}</h1>\n  }\n  return (\n    <div>\n      <h1>Disney Characters</h1>\n      {disney.map((item, index)=>{\n        return ( \n        <div key={index}>\n        <h2>Character: {item.name}</h2>\n        <h3>Films: {item.films}</h3>\n        <h4>TV Shows: {item.tvShows}</h4>\n        <img src= {item.imageUrl} alt = {item.name}/>\n        <BrowserRouter>\n        <div>\n        <p>Character Info:</p>\n        <Link to ='/'>{item.sourceUrl}</Link>\n        </div>\n        </BrowserRouter>\n        </div>\n        ) \n      })}\n      <button onClick={handler}>Pick a random Disney Character</button>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const App = () => {\n//   const [quotes, setQuotes] = useState(\"\")\n\n//   const handler = async () => {\n//     try{\n//       const response = await fetch(\"https://inspiration.goprogram.ai/\")\n//       const data = await response.json()\n//       console.log(response)\n//       setQuotes(data.data)\n//     }catch(error){\n//       console.log(\"oops\")\n//     }\n//   }\n//   return (\n//     <div>\n//       <h1>Famous Quotes</h1>\n//       <p>Quote: {quotes.quote}</p>\n//       <button onClick={handler}>get quote</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n// const App = () => {\n//   const [adviceSlip, setAdviceSlip] = useState(\"\")\n\n//   const handler = async () => {\n//     try{\n//       const response = await fetch(\"https://api.adviceslip.com/advice\")\n//       const data = await response.json()\n//       console.log(data)\n//       setAdviceSlip(data.slip)\n//     }catch(error){\n//       console.log(error)\n//     }\n//   }\n//   return (\n//     <div>\n//       <h1>advice</h1>\n//       <p>advice: {adviceSlip.advice}</p>\n//       <button onClick={handler}>get data</button>\n//     </div>\n//   );\n// };\n\n// export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}